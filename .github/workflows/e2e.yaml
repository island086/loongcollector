# Copyright 2021 iLogtail Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: E2E Test

on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "example_config/**"
      - "docker/**"
      - "k8s_template/**"
      - "changes/**"
      - "licenses/**"
      - "CHANGELOG.md"
  push:
    branches:
      - main
      - 1.*
      - 2.*
jobs:
  # 生成E2E测试用例列表
  GenerateE2ETestCasesList:
    runs-on: ubuntu-latest
    outputs:
      cases: ${{ steps.discover.outputs.cases }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Discover Test Cases
        id: discover
        run: |
          # 使用JSON格式输出用例列表
          cases=($(find test/e2e/test_cases -mindepth 1 -maxdepth 1 -type d -printf "%f\n"))
          # 检查是否找到用例
          if [ ${#cases[@]} -eq 0 ]; then
            echo "Error: No test cases found"
            exit 1
          fi
          # 转换为JSON数组格式
          json="["
          for i in "${!cases[@]}"; do
            json+="\"${cases[$i]}\""
            if [ $i -lt $((${#cases[@]}-1)) ]; then
              json+=","
            fi
          done
          json+="]"
          # 输出JSON到文件和控制台
          echo "$json" > cases.json
          cat cases.json
          echo "cases=$json" >> $GITHUB_OUTPUT

  # 生成e2e镜像
  GenerateE2ETestImage:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      packages: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Set custom submodule URL and fetch
        run: |
          SUBMODULE_PATH="core/_thirdparty/coolbpf"
          git config submodule.$SUBMODULE_PATH.url "https://github.com/aliyun/coolbpf.git"
          git submodule update --init
          cd $SUBMODULE_PATH
          echo "Current commit: $(git rev-parse HEAD)"

      - name: Build Image
        run: |
          docker build \
            --tag aliyun/loongcollector:0.0.1 \
            --file ./docker/Dockerfile_edge_linux \
            --build-arg VERSION=0.0.1 \
            --build-arg BUILD_LOGTAIL_UT=OFF \
            --build-arg ENABLE_COMPATIBLE_MODE=ON \
            --build-arg ENABLE_STATIC_LINK_CRT=ON \
            --build-arg WITHOUTGDB=ON \
            --build-arg WITHSPL=ON \
            --build-arg MAKE_JOBS=16 \
            --build-arg HOST_OS=Linux \
            .

      - name: Export Image to Tar
        run: docker save -o image.tar aliyun/loongcollector:0.0.1

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: loongcollector-image
          path: image.tar

  # E2E测试
  E2E:
    runs-on: ubuntu-latest
    needs: 
      - GenerateE2ETestCasesList
      - GenerateE2ETestImage
    strategy:
      matrix:
        test_case: ${{ fromJson(needs.GenerateE2ETestCasesList.outputs.cases) }}
      fail-fast: false
    timeout-minutes: 60
    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Update Docker-compose to v2
        run: |
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.7.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: loongcollector-image

      - name: Import Image from Tar
        run: docker load -i ./image.tar

      - name: E2E Behavior Test Case ${{ matrix.test_case }}
        env:
          TEST_CASE: ${{ matrix.test_case }}
        run: |
          ./scripts/e2e.sh e2e

  actions-timeline:
    needs: [E2E]
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - uses: Kesin11/actions-timeline@v2
